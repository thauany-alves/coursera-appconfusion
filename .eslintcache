[{"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\index.js":"1","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\App.js":"2","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\reportWebVitals.js":"3","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\MenuComponent.js":"4","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\shared\\dishes.js":"5","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\DishdetailComponent.js":"6","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\MainComponent.js":"7","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\HeaderComponent.js":"8","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\FooterComponent.js":"9","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\HomeComponent.js":"10","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\ContactComponent.js":"11","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\shared\\leaders.js":"12","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\shared\\comments.js":"13","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\shared\\promotions.js":"14","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\AboutComponent.js":"15","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\configureStore.js":"16","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\reducer.js":"17","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\CommentFormComponent.js":"18","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\dishes.js":"19","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\promotions.js":"20","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\comments.js":"21","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\leaders.js":"22","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\ActionCreators.js":"23","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\ActionTypes.js":"24","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\LoadingComponent.js":"25","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\forms.js":"26","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\shared\\baseUrl.js":"27"},{"size":594,"mtime":1610388345036,"results":"28","hashOfConfig":"29"},{"size":618,"mtime":1611005486789,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"29"},{"size":2089,"mtime":1611776235778,"results":"32","hashOfConfig":"29"},{"size":1490,"mtime":1610567587684,"results":"33","hashOfConfig":"29"},{"size":7164,"mtime":1611775472326,"results":"34","hashOfConfig":"29"},{"size":3161,"mtime":1611775093737,"results":"35","hashOfConfig":"29"},{"size":5534,"mtime":1610997745133,"results":"36","hashOfConfig":"29"},{"size":2829,"mtime":1610403447753,"results":"37","hashOfConfig":"29"},{"size":1823,"mtime":1611775391921,"results":"38","hashOfConfig":"29"},{"size":11074,"mtime":1611776292894,"results":"39","hashOfConfig":"29"},{"size":2382,"mtime":1610567694655,"results":"40","hashOfConfig":"29"},{"size":4279,"mtime":1610567667424,"results":"41","hashOfConfig":"29"},{"size":445,"mtime":1610567719678,"results":"42","hashOfConfig":"29"},{"size":4282,"mtime":1610639311795,"results":"43","hashOfConfig":"29"},{"size":787,"mtime":1611667855717,"results":"44","hashOfConfig":"29"},{"size":407,"mtime":1611005207206,"results":"45","hashOfConfig":"29"},{"size":3883,"mtime":1611085449562,"results":"46","hashOfConfig":"29"},{"size":616,"mtime":1611584439164,"results":"47","hashOfConfig":"29"},{"size":635,"mtime":1611775648811,"results":"48","hashOfConfig":"29"},{"size":771,"mtime":1611774559869,"results":"49","hashOfConfig":"29"},{"size":228,"mtime":1611237589137,"results":"50","hashOfConfig":"29"},{"size":3469,"mtime":1611781114834,"results":"51","hashOfConfig":"29"},{"size":411,"mtime":1611765385192,"results":"52","hashOfConfig":"29"},{"size":252,"mtime":1611581874508,"results":"53","hashOfConfig":"29"},{"size":169,"mtime":1611667794648,"results":"54","hashOfConfig":"29"},{"size":50,"mtime":1611765201711,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"h4akg4",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\index.js",[],["118","119"],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\App.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\reportWebVitals.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\MenuComponent.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\shared\\dishes.js",[],["120","121"],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\DishdetailComponent.js",["122","123","124"],"import React, { Component} from 'react';\r\nimport { List, Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, \r\n    BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Label, Row } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { Control , LocalForm, Errors} from 'react-redux-form';\r\nimport {Loading} from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\nfunction RenderDish({dish}){\r\n    return(\r\n        <Card>\r\n            <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n            <CardBody>\r\n                <CardTitle>{dish.name}</CardTitle>\r\n                <CardText>{dish.description}</CardText>\r\n            </CardBody>\r\n        </Card>\r\n    );  \r\n}\r\n\r\nfunction RenderComments({comments, addComment, dishId}){\r\n    if(comments != null)\r\n        return(\r\n            <div className=\"col-12 col-md-5 m-1\" >\r\n                <h4>Comments</h4>\r\n                {comments.map((comment)=> {            \r\n                    return (\r\n                        <List key={comment.id} type=\"unstyled\">\r\n                            <li>{comment.comment}</li>\r\n                            <li className=\"text-muted\">-- {comment.author},{' '}  \r\n                                {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))} </li>\r\n                        </List>\r\n                    )\r\n                })}\r\n                <CommentForm dishId={dishId} addComment={addComment} />\r\n            </div>\r\n        )\r\n    else \r\n        return(<div></div>);    \r\n}\r\n\r\n\r\n\r\nconst DishDetail = (props) => {\r\n    if(props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if(props.errMess){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }else if(props.dish != null)    \r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={props.dish} />\r\n                    </div>\r\n                    <RenderComments comments={props.comments} \r\n                        addComment={props.addComment}\r\n                        dishId={props.dish.id} />          \r\n                </div>\r\n            </div>\r\n        );\r\n    else \r\n        return( <div></div>);\r\n}\r\n\r\nexport default DishDetail;\r\n\r\nclass CommentForm extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = { isModalOpen: false };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values){\r\n        this.toggleModal();\r\n        this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Button className=\"mt-4\" outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-lg mr-1\"></span> Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group m-auto\">                               \r\n                                <Label htmlFor=\"rating\">Rating</Label>\r\n                                <Control.select model=\".rating\" \r\n                                    id=\"rating\" \r\n                                    name=\"rating\" \r\n                                    className=\"form-control\"\r\n                                >\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                    <option value=\"4\">4</option>\r\n                                    <option value=\"5\">5</option>\r\n                                </Control.select>\r\n                            </Row>\r\n                            <Row className=\"form-group  m-auto\">\r\n                                <Label htmlFor=\"author\">Your Name</Label>\r\n                                <Control.text model=\".author\" id=\"author\" name=\"author\" \r\n                                    className=\"form-control\"\r\n                                    validators = {{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                />\r\n                                <Errors className=\"text-danger\" \r\n                                    model=\".author\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required ',\r\n                                        minLength: 'Mus be greater than 2 characters ',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                />\r\n                            </Row>\r\n                            <Row className=\"form-group  m-auto\">\r\n                                <Label htmlFor=\"comment\">Your comment</Label>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" \r\n                                        className=\"form-control\"\r\n                                        rows=\"6\"\r\n                                    />                               \r\n                            </Row>\r\n                            <Button className=\"mt-2\" type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        )  \r\n    }\r\n}","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\MainComponent.js",["125"],"import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Contact from './ContactComponent';\r\nimport Footer from './FooterComponent';\r\nimport About from './AboutComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { addComment, fetchDishes, fetchComments, fetchPromotions } from \"../redux/ActionCreators\";\r\nimport { actions } from 'react-redux-form';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addComment: (dishId, rating, author, comment) => dispatch(addComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes()) },\r\n  fetchComments: () => { dispatch(fetchComments()) },\r\n  fetchPromotions: () => { dispatch(fetchPromotions()) },\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))}\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromotions();\r\n  }\r\n\r\n  render() {\r\n\r\n    const HomePage = () => { \r\n      return(\r\n        <Home \r\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishesErrMess={this.props.dishes.errMess}\r\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n          promotionsLoading={this.props.promotions.isLoading}\r\n          promotionsErrMess={this.props.promotions.errMess}\r\n          leader={this.props.leaders.filter((leader) => leader.featured)[0]}\r\n        />\r\n\r\n      )\r\n    }\r\n\r\n    const DishWithId = ({match}) =>{\r\n      return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n        isLoading={this.props.dishes.isLoading}\r\n        errMess={this.props.dishes.errMess}\r\n        comments={this.props.comments.comments.filter((comments) => comments.dishId === parseInt(match.params.dishId,10))} \r\n        commentsErrMess={this.props.comments.errMess}\r\n        addComment={this.props.addComment}/>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/home\" component={HomePage} />\r\n          <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n          <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\r\n          <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n          <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} />} />\r\n          <Redirect to=\"/home\" />\r\n        </Switch>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\HeaderComponent.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\FooterComponent.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\HomeComponent.js",["126"],"import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { dishesLoading } from '../redux/ActionCreators';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderCard({item, isLoading, errMess}){\r\n    if(isLoading){\r\n        return(\r\n            <Loading />\r\n        )\r\n    }else if (errMess) {\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }else \r\n        return (\r\n            <Card>\r\n                <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle className=\"text-muted mb-3\">{item.designation}</CardSubtitle> : null}\r\n                    <CardSubtitle></CardSubtitle>\r\n                    <CardText>{item.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n}\r\n\r\nfunction Home(props){\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start mt-3\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} \r\n                        isLoading={props.dishesLoading}\r\n                        errMess={props.dishesErrMess}/>\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} \r\n                        isLoading={props.promotionsLoading}\r\n                        errMess={props.promotionsErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\ContactComponent.js",["127","128","129","130","131","132","133","134"],"import React, {Component} from 'react';\r\nimport {Breadcrumb, BreadcrumbItem, Button, Label, Col, Row} from 'reactstrap';\r\nimport { Link} from 'react-router-dom';\r\nimport { Control , Form, Errors} from 'react-redux-form'\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n \r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleSubmit(values){\r\n        console.log(\"Current state is \"+ JSON.stringify(values));\r\n        alert(\"Current state is \"+ JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" \r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators = {{\r\n                                            required, minLength: minLength(2), maxLength: maxLength(20)\r\n                                        }}\r\n                                    />\r\n                                    <Errors  \r\n                                        className=\"text-danger\"\r\n                                        model =\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required\\n',\r\n                                            minLength: 'Must be greater than 1 characters\\n',\r\n                                            maxLength: 'Must be 20 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" \r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators = {{\r\n                                            required, minLength: minLength(2), maxLength: maxLength(20)\r\n                                        }}\r\n                                    /> \r\n                                    <Errors  \r\n                                        className=\"text-danger\"\r\n                                        model =\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required\\n',\r\n                                            minLength: 'Must be greater than 1 characters\\n',\r\n                                            maxLength: 'Must be 20 characters or less'\r\n                                        }}\r\n                                    />                              \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" \r\n                                        placeholder=\"Tel. number\"\r\n                                        className=\"form-control\"\r\n                                        validators = {{\r\n                                            required, minLength: minLength(3), \r\n                                            maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                    />\r\n                                     <Errors  \r\n                                        className=\"text-danger\"\r\n                                        model =\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required\\n',\r\n                                            minLength: 'Must be greater than 2 characters\\n',\r\n                                            maxLength: 'Must be 15 characters or less\\n',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />                                     \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\" \r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators = {{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors  \r\n                                        className=\"text-danger\"\r\n                                        model =\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required\\n',\r\n                                            validEmail: 'Must be a valid email address'\r\n                                        }}\r\n                                    />  \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}} >\r\n                                    <div className=\"form-check\" check>\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\" \r\n                                             className=\"form-check-input\" /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}} >\r\n                                    <Control.select model=\".contactType\" name=\"contactType\" \r\n                                        className=\"form-control\">\r\n                                        <option value=\"Tel.\">Tel.</option>\r\n                                        <option value=\"Email\">Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" \r\n                                        rows=\"8\"\r\n                                        className=\"form-control\"/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">Send Feedback</Button>\r\n                                </Col>\r\n                                \r\n                            </Row>\r\n\r\n                            \r\n                            \r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n    \r\n}\r\n\r\nexport default Contact;","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\shared\\leaders.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\shared\\comments.js",[],["135","136"],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\shared\\promotions.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\AboutComponent.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\configureStore.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\reducer.js",[],["137","138"],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\CommentFormComponent.js",["139","140","141"],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\dishes.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\promotions.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\comments.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\leaders.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\ActionCreators.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\ActionTypes.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\LoadingComponent.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\forms.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\shared\\baseUrl.js",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"142","replacedBy":"146"},{"ruleId":"144","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":127,"column":33,"nodeType":"150","endLine":131,"endColumn":34},{"ruleId":"148","severity":1,"message":"151","line":141,"column":33,"nodeType":"150","endLine":146,"endColumn":35},{"ruleId":"148","severity":1,"message":"152","line":159,"column":37,"nodeType":"150","endLine":162,"endColumn":39},{"ruleId":"153","severity":1,"message":"154","line":33,"column":3,"nodeType":"155","messageId":"156","endLine":35,"endColumn":4},{"ruleId":"157","severity":1,"message":"158","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":23},{"ruleId":"161","severity":1,"message":"162","line":62,"column":29,"nodeType":"150","endLine":62,"endColumn":71},{"ruleId":"148","severity":1,"message":"151","line":77,"column":37,"nodeType":"150","endLine":83,"endColumn":39},{"ruleId":"148","severity":1,"message":"151","line":99,"column":37,"nodeType":"150","endLine":105,"endColumn":39},{"ruleId":"148","severity":1,"message":"151","line":121,"column":37,"nodeType":"150","endLine":128,"endColumn":39},{"ruleId":"148","severity":1,"message":"151","line":145,"column":37,"nodeType":"150","endLine":151,"endColumn":39},{"ruleId":"148","severity":1,"message":"163","line":167,"column":45,"nodeType":"150","endLine":168,"endColumn":77},{"ruleId":"148","severity":1,"message":"149","line":174,"column":37,"nodeType":"150","endLine":175,"endColumn":66},{"ruleId":"148","severity":1,"message":"152","line":185,"column":37,"nodeType":"150","endLine":187,"endColumn":67},{"ruleId":"142","replacedBy":"164"},{"ruleId":"144","replacedBy":"165"},{"ruleId":"142","replacedBy":"166"},{"ruleId":"144","replacedBy":"167"},{"ruleId":"148","severity":1,"message":"149","line":34,"column":33,"nodeType":"150","endLine":38,"endColumn":34},{"ruleId":"148","severity":1,"message":"151","line":48,"column":33,"nodeType":"150","endLine":53,"endColumn":35},{"ruleId":"148","severity":1,"message":"152","line":66,"column":37,"nodeType":"150","endLine":69,"endColumn":39},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],["168"],["169"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'dishesLoading' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["168"],["169"],["168"],["169"],"no-global-assign","no-unsafe-negation"]