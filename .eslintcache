[{"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\index.js":"1","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\App.js":"2","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\reportWebVitals.js":"3","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\MenuComponent.js":"4","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\shared\\dishes.js":"5","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\DishdetailComponent.js":"6","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\MainComponent.js":"7","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\HeaderComponent.js":"8","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\FooterComponent.js":"9","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\HomeComponent.js":"10","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\ContactComponent.js":"11","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\shared\\leaders.js":"12","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\shared\\comments.js":"13","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\shared\\promotions.js":"14","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\AboutComponent.js":"15","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\configureStore.js":"16","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\reducer.js":"17"},{"size":594,"mtime":1610388345036,"results":"18","hashOfConfig":"19"},{"size":618,"mtime":1611005486789,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":1419,"mtime":1611003419138,"results":"22","hashOfConfig":"19"},{"size":1490,"mtime":1610567587684,"results":"23","hashOfConfig":"19"},{"size":2307,"mtime":1611004919776,"results":"24","hashOfConfig":"19"},{"size":1957,"mtime":1611005522522,"results":"25","hashOfConfig":"19"},{"size":5534,"mtime":1610997745133,"results":"26","hashOfConfig":"19"},{"size":2829,"mtime":1610403447753,"results":"27","hashOfConfig":"19"},{"size":1193,"mtime":1610572147323,"results":"28","hashOfConfig":"19"},{"size":10969,"mtime":1610730835580,"results":"29","hashOfConfig":"19"},{"size":2382,"mtime":1610567694655,"results":"30","hashOfConfig":"19"},{"size":4279,"mtime":1610567667424,"results":"31","hashOfConfig":"19"},{"size":445,"mtime":1610567719678,"results":"32","hashOfConfig":"19"},{"size":4282,"mtime":1610639311795,"results":"33","hashOfConfig":"19"},{"size":262,"mtime":1611005270968,"results":"34","hashOfConfig":"19"},{"size":407,"mtime":1611005207206,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"h4akg4",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\index.js",[],["74","75"],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\App.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\reportWebVitals.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\MenuComponent.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\shared\\dishes.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\DishdetailComponent.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\MainComponent.js",["76"],"import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Contact from './ContactComponent';\r\nimport Footer from './FooterComponent';\r\nimport About from './AboutComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\nclass Main extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n\r\n    const HomePage = () => { \r\n      return(\r\n        <Home \r\n          dish={this.props.dishes.filter((dish) => dish.featured)[0]}\r\n          promotion={this.props.promotions.filter((promo) => promo.featured)[0]}\r\n          leader={this.props.leaders.filter((leader) => leader.featured)[0]}\r\n        />\r\n\r\n      )\r\n    }\r\n\r\n    const DishWithId = ({match}) =>{\r\n      return(\r\n        <DishDetail dish={this.props.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n        comments={this.props.comments.filter((comments) => comments.dishId === parseInt(match.params.dishId,10))} />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/home\" component={HomePage} />\r\n          <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n          <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\r\n          <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n          <Route exact path=\"/contactus\" component={Contact} />\r\n          <Redirect to=\"/home\" />\r\n        </Switch>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Main));","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\HeaderComponent.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\FooterComponent.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\HomeComponent.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\ContactComponent.js",["77"],"import React, {Component} from 'react';\r\nimport {Breadcrumb, BreadcrumbItem, Button, Label, Form, FormGroup, Input, Col, FormFeedback} from 'reactstrap';\r\nimport { Link} from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            telNum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'Tel.',\r\n            message: '',\r\n            touched: {\r\n                firstName: false,\r\n                lastName: false,\r\n                telNum: false,\r\n                email: false,\r\n            }\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.handleBlur = this.handleBlur.bind(this)\r\n    }\r\n\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: {...this.state.touched, [field]: true }\r\n        });\r\n    }\r\n\r\n    validate(firstName, lastName, telNum, email){\r\n        const errors ={\r\n            firstName: '',\r\n            lastName: '',\r\n            telNum: '',\r\n            email: '',\r\n        }\r\n\r\n        if(this.state.touched.firstName && firstName.length < 3)\r\n            errors.firstName = \"First Name should be >= 3 characters\";\r\n        else if (this.state.touched.firstName && firstName.length> 10)\r\n            errors.firstName = \"First Name should be <= 10 characters\";\r\n\r\n        if(this.state.touched.lastName && lastName.length < 3)\r\n            errors.lastName = \"Last Name should be >= 3 characters\";\r\n        else if (this.state.touched.lastName && lastName.length> 10)\r\n            errors.lasttName = \"Last Name should be <= 10 characters\";\r\n\r\n        const reg = /^\\d+$/;\r\n        if(this.state.touched.telNum && !reg.test(telNum))\r\n            errors.telNum = 'Tel. Number should contain only';\r\n        \r\n        if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\r\n            errors.email = 'Email should contain a @';\r\n    \r\n        return errors;\r\n    }\r\n\r\n    handleInputChange(event){\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox'? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event){\r\n        console.log(\"Current state is \"+ JSON.stringify(this.state));\r\n        alert(\"Current state is \"+ JSON.stringify(this.state));\r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        const errors = this.validate(this.state.firstName, this.state.lastName, this.state.telNum, this.state.email);\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"firstName\" name=\"firstName\" \r\n                                        placeholder=\"First Name\"\r\n                                        value={this.state.firstName}\r\n                                        valid={errors.firstName === ''}\r\n                                        invalid={errors.firstName !== ''}\r\n                                        onBlur={this.handleBlur('firstName')} \r\n                                        onChange={this.handleInputChange}/>\r\n                                    <FormFeedback>{errors.firstName}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"lastName\" md={2}>last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"lastName\" name=\"lastName\" \r\n                                        placeholder=\"last Name\"\r\n                                        value={this.state.lastName} \r\n                                        valid={errors.lastName === ''}\r\n                                        invalid={errors.lastName !== ''}\r\n                                        onBlur={this.handleBlur('lastName')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.lastName}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"telNum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"tel\" id=\"telNum\" name=\"telNum\" \r\n                                        placeholder=\"Tel. number\"\r\n                                        value={this.state.telNum} \r\n                                        valid={errors.telNum === ''}\r\n                                        invalid={errors.telNum !== ''}\r\n                                        onBlur={this.handleBlur('telNum')}\r\n                                        onChange={this.handleInputChange}/>\r\n                                    <FormFeedback>{errors.telNum}</FormFeedback>\r\n                                    \r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"email\" id=\"email\" name=\"email\" \r\n                                        placeholder=\"Email\"\r\n                                        value={this.state.email} \r\n                                        valid={errors.email === ''}\r\n                                        invalid={errors.email !== ''}\r\n                                        onBlur={this.handleBlur('email')}\r\n                                        onChange={this.handleInputChange}/>\r\n                                    <FormFeedback>{errors.email}</FormFeedback>\r\n\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size: 6, offset: 2}} >\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\" name=\"agree\" \r\n                                            checked={this.state.agree} \r\n                                            onChange={this.handleInputChange} /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}} >\r\n                                    <Input type=\"select\" name=\"contactType\" \r\n                                    value={this.state.contactType} \r\n                                    onChange={this.handleInputChange}>\r\n                                        <option value=\"Tel.\">Tel.</option>\r\n                                        <option value=\"Email\">Email</option>\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"textarea\" id=\"message\" name=\"message\" \r\n                                        rows=\"8\"\r\n                                        value={this.state.message} \r\n                                        onChange={this.handleInputChange}/>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">Send Feedback</Button>\r\n                                </Col>\r\n                                \r\n                            </FormGroup>\r\n\r\n                            \r\n                            \r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n    \r\n}\r\n\r\nexport default Contact;","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\shared\\leaders.js",[],["78","79"],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\shared\\comments.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\shared\\promotions.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\AboutComponent.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\configureStore.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\reducer.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":22,"column":3,"nodeType":"86","messageId":"87","endLine":24,"endColumn":4},{"ruleId":"88","severity":1,"message":"89","line":115,"column":29,"nodeType":"90","endLine":115,"endColumn":71},{"ruleId":"80","replacedBy":"91"},{"ruleId":"82","replacedBy":"92"},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["93"],["94"],"no-global-assign","no-unsafe-negation"]