[{"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\index.js":"1","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\App.js":"2","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\reportWebVitals.js":"3","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\MenuComponent.js":"4","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\shared\\dishes.js":"5","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\DishdetailComponent.js":"6","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\MainComponent.js":"7","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\HeaderComponent.js":"8","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\FooterComponent.js":"9","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\HomeComponent.js":"10","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\ContactComponent.js":"11","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\shared\\leaders.js":"12","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\shared\\comments.js":"13","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\shared\\promotions.js":"14","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\AboutComponent.js":"15","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\configureStore.js":"16","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\reducer.js":"17","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\CommentFormComponent.js":"18","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\dishes.js":"19","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\promotions.js":"20","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\comments.js":"21","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\leaders.js":"22"},{"size":594,"mtime":1610388345036,"results":"23","hashOfConfig":"24"},{"size":618,"mtime":1611005486789,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":1419,"mtime":1611003419138,"results":"27","hashOfConfig":"24"},{"size":1490,"mtime":1610567587684,"results":"28","hashOfConfig":"24"},{"size":6095,"mtime":1611088225470,"results":"29","hashOfConfig":"24"},{"size":1957,"mtime":1611005522522,"results":"30","hashOfConfig":"24"},{"size":5534,"mtime":1610997745133,"results":"31","hashOfConfig":"24"},{"size":2829,"mtime":1610403447753,"results":"32","hashOfConfig":"24"},{"size":1193,"mtime":1610572147323,"results":"33","hashOfConfig":"24"},{"size":11031,"mtime":1611074295426,"results":"34","hashOfConfig":"24"},{"size":2382,"mtime":1610567694655,"results":"35","hashOfConfig":"24"},{"size":4279,"mtime":1610567667424,"results":"36","hashOfConfig":"24"},{"size":445,"mtime":1610567719678,"results":"37","hashOfConfig":"24"},{"size":4282,"mtime":1610639311795,"results":"38","hashOfConfig":"24"},{"size":478,"mtime":1611237816949,"results":"39","hashOfConfig":"24"},{"size":407,"mtime":1611005207206,"results":"40","hashOfConfig":"24"},{"size":3883,"mtime":1611085449562,"results":"41","hashOfConfig":"24"},{"size":181,"mtime":1611235994517,"results":"42","hashOfConfig":"24"},{"size":194,"mtime":1611236957907,"results":"43","hashOfConfig":"24"},{"size":189,"mtime":1611237639749,"results":"44","hashOfConfig":"24"},{"size":228,"mtime":1611237589137,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"h4akg4",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\index.js",[],["95","96"],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\App.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\reportWebVitals.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\MenuComponent.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\shared\\dishes.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\DishdetailComponent.js",["97","98","99"],"import React, { Component} from 'react';\r\nimport { List, Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, \r\n    BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Label, Row } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { Control , LocalForm, Errors} from 'react-redux-form';\r\n//import CommentForm from './CommentFormComponent';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\nfunction RenderDish({dish}){\r\n    return(\r\n        <Card>\r\n            <CardImg top src={dish.image} alt={dish.name} />\r\n            <CardBody>\r\n                <CardTitle>{dish.name}</CardTitle>\r\n                <CardText>{dish.description}</CardText>\r\n            </CardBody>\r\n        </Card>\r\n    );  \r\n}\r\n\r\nfunction RenderComments({comments}){\r\n    if(comments == null) return <div></div>\r\n    \r\n    const commentsRendered = comments.map((comment)=> {            \r\n        return (\r\n            <List key={comment.id} type=\"unstyled\">\r\n                <li>{comment.comment}</li>\r\n                <li className=\"text-muted\">-- {comment.author},  {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))} </li>\r\n            </List>\r\n        )\r\n    });\r\n\r\n    return(\r\n        <div>\r\n            {commentsRendered}\r\n            <CommentForm />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst DishDetail = (props) => {\r\n    \r\n    if(props.dish == null) return <div></div>;    \r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>{props.dish.name}</h3>\r\n                    <hr/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <RenderDish dish={props.dish} />\r\n                </div>\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <h4>Comments</h4>\r\n                    <RenderComments comments={props.comments} />\r\n                </div>            \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DishDetail;\r\n\r\nclass CommentForm extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = { isModalOpen: false };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Button className=\"mt-4\" outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-lg mr-1\"></span> Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={this.toggleModal}>\r\n                            <Row className=\"form-group m-auto\">                               \r\n                                <Label htmlFor=\"rating\">Rating</Label>\r\n                                <Control.select model=\".rating\" \r\n                                    id=\"rating\" \r\n                                    name=\"rating\" \r\n                                    className=\"form-control\"\r\n                                >\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                    <option value=\"4\">4</option>\r\n                                    <option value=\"5\">5</option>\r\n                                </Control.select>\r\n                            </Row>\r\n                            <Row className=\"form-group  m-auto\">\r\n                                <Label htmlFor=\"author\">Your Name</Label>\r\n                                <Control.text model=\".author\" id=\"author\" name=\"author\" \r\n                                    className=\"form-control\"\r\n                                    validators = {{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                />\r\n                                <Errors className=\"text-danger\" \r\n                                    model=\".author\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required ',\r\n                                        minLength: 'Mus be greater than 2 characters ',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                />\r\n                            </Row>\r\n                            <Row className=\"form-group  m-auto\">\r\n                                <Label htmlFor=\"comment\">Your comment</Label>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" \r\n                                        className=\"form-control\"\r\n                                        rows=\"6\"\r\n                                    />                               \r\n                            </Row>\r\n                            <Button className=\"mt-2\" type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        )  \r\n    }\r\n}","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\MainComponent.js",["100"],"import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Contact from './ContactComponent';\r\nimport Footer from './FooterComponent';\r\nimport About from './AboutComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\nclass Main extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n\r\n    const HomePage = () => { \r\n      return(\r\n        <Home \r\n          dish={this.props.dishes.filter((dish) => dish.featured)[0]}\r\n          promotion={this.props.promotions.filter((promo) => promo.featured)[0]}\r\n          leader={this.props.leaders.filter((leader) => leader.featured)[0]}\r\n        />\r\n\r\n      )\r\n    }\r\n\r\n    const DishWithId = ({match}) =>{\r\n      return(\r\n        <DishDetail dish={this.props.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n        comments={this.props.comments.filter((comments) => comments.dishId === parseInt(match.params.dishId,10))} />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/home\" component={HomePage} />\r\n          <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n          <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\r\n          <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n          <Route exact path=\"/contactus\" component={Contact} />\r\n          <Redirect to=\"/home\" />\r\n        </Switch>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Main));","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\HeaderComponent.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\FooterComponent.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\HomeComponent.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\ContactComponent.js",["101","102","103","104","105","106","107","108"],"import React, {Component} from 'react';\r\nimport {Breadcrumb, BreadcrumbItem, Button, Label, Col, Row} from 'reactstrap';\r\nimport { Link} from 'react-router-dom';\r\nimport { Control , LocalForm, Errors} from 'react-redux-form'\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n \r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleSubmit(values){\r\n        console.log(\"Current state is \"+ JSON.stringify(values));\r\n        alert(\"Current state is \"+ JSON.stringify(values));\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" \r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators = {{\r\n                                            required, minLength: minLength(2), maxLength: maxLength(20)\r\n                                        }}\r\n                                    />\r\n                                    <Errors  \r\n                                        className=\"text-danger\"\r\n                                        model =\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required\\n',\r\n                                            minLength: 'Must be greater than 1 characters\\n',\r\n                                            maxLength: 'Must be 20 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" \r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators = {{\r\n                                            required, minLength: minLength(2), maxLength: maxLength(20)\r\n                                        }}\r\n                                    /> \r\n                                    <Errors  \r\n                                        className=\"text-danger\"\r\n                                        model =\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required\\n',\r\n                                            minLength: 'Must be greater than 1 characters\\n',\r\n                                            maxLength: 'Must be 20 characters or less'\r\n                                        }}\r\n                                    />                              \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" \r\n                                        placeholder=\"Tel. number\"\r\n                                        className=\"form-control\"\r\n                                        validators = {{\r\n                                            required, minLength: minLength(3), \r\n                                            maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                    />\r\n                                     <Errors  \r\n                                        className=\"text-danger\"\r\n                                        model =\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required\\n',\r\n                                            minLength: 'Must be greater than 2 characters\\n',\r\n                                            maxLength: 'Must be 15 characters or less\\n',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />                                     \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\" \r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators = {{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors  \r\n                                        className=\"text-danger\"\r\n                                        model =\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required\\n',\r\n                                            validEmail: 'Must be a valid email address'\r\n                                        }}\r\n                                    />  \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}} >\r\n                                    <div className=\"form-check\" check>\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\" \r\n                                             className=\"form-check-input\" /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}} >\r\n                                    <Control.select model=\".contactType\" name=\"contactType\" \r\n                                        className=\"form-control\">\r\n                                        <option value=\"Tel.\">Tel.</option>\r\n                                        <option value=\"Email\">Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" \r\n                                        rows=\"8\"\r\n                                        className=\"form-control\"/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">Send Feedback</Button>\r\n                                </Col>\r\n                                \r\n                            </Row>\r\n\r\n                            \r\n                            \r\n                        </LocalForm>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n    \r\n}\r\n\r\nexport default Contact;","C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\shared\\leaders.js",[],["109","110"],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\shared\\comments.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\shared\\promotions.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\AboutComponent.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\configureStore.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\reducer.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\components\\CommentFormComponent.js",["111","112","113"],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\dishes.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\promotions.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\comments.js",[],"C:\\Users\\Thauany\\Documents\\Cursos_Desenvolvimento\\Coursera-FrontEnd-React\\confusion\\src\\redux\\leaders.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":102,"column":33,"nodeType":"120","endLine":106,"endColumn":34},{"ruleId":"118","severity":1,"message":"121","line":116,"column":33,"nodeType":"120","endLine":121,"endColumn":35},{"ruleId":"118","severity":1,"message":"122","line":134,"column":37,"nodeType":"120","endLine":137,"endColumn":39},{"ruleId":"123","severity":1,"message":"124","line":22,"column":3,"nodeType":"125","messageId":"126","endLine":24,"endColumn":4},{"ruleId":"127","severity":1,"message":"128","line":61,"column":29,"nodeType":"120","endLine":61,"endColumn":71},{"ruleId":"118","severity":1,"message":"121","line":76,"column":37,"nodeType":"120","endLine":82,"endColumn":39},{"ruleId":"118","severity":1,"message":"121","line":98,"column":37,"nodeType":"120","endLine":104,"endColumn":39},{"ruleId":"118","severity":1,"message":"121","line":120,"column":37,"nodeType":"120","endLine":127,"endColumn":39},{"ruleId":"118","severity":1,"message":"121","line":144,"column":37,"nodeType":"120","endLine":150,"endColumn":39},{"ruleId":"118","severity":1,"message":"129","line":166,"column":45,"nodeType":"120","endLine":167,"endColumn":77},{"ruleId":"118","severity":1,"message":"119","line":173,"column":37,"nodeType":"120","endLine":174,"endColumn":66},{"ruleId":"118","severity":1,"message":"122","line":184,"column":37,"nodeType":"120","endLine":186,"endColumn":67},{"ruleId":"114","replacedBy":"130"},{"ruleId":"116","replacedBy":"131"},{"ruleId":"118","severity":1,"message":"119","line":34,"column":33,"nodeType":"120","endLine":38,"endColumn":34},{"ruleId":"118","severity":1,"message":"121","line":48,"column":33,"nodeType":"120","endLine":53,"endColumn":35},{"ruleId":"118","severity":1,"message":"122","line":66,"column":37,"nodeType":"120","endLine":69,"endColumn":39},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["132"],["133"],"no-global-assign","no-unsafe-negation"]